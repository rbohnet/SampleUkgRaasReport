//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BiDataServicesParametersSample.BiStreamingService
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.ultipro.com/dataservices/bistream/2", ConfigurationName="BiDataServicesParametersSample.BiStreamingService.IBIStreamService")]
    public interface IBIStreamService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ultipro.com/dataservices/bistream/2/IBIStreamService/RetrieveReport", ReplyAction="http://www.ultipro.com/dataservices/bistream/2/IBIStreamService/RetrieveReportRes" +
            "ponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<BiDataServicesParametersSample.BiStreamingService.StreamReportResponse> RetrieveReportAsync(BiDataServicesParametersSample.BiStreamingService.RetrieveReportRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.ultipro.com/dataservices/bistream/2")]
    public enum ReportResponseStatus
    {
        
        /// <remarks/>
        Working,
        
        /// <remarks/>
        Completed,
        
        /// <remarks/>
        Failed,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RetrieveReportRequest", WrapperNamespace="http://www.ultipro.com/dataservices/bistream/2", IsWrapped=true)]
    public partial class RetrieveReportRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.ultipro.com/dataservices/bistream/2")]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ReportKey;
        
        public RetrieveReportRequest()
        {
        }
        
        public RetrieveReportRequest(string ReportKey)
        {
            this.ReportKey = ReportKey;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="StreamReportResponse", WrapperNamespace="http://www.ultipro.com/dataservices/bistream/2", IsWrapped=true)]
    public partial class StreamReportResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.ultipro.com/dataservices/bistream/2")]
        public BiDataServicesParametersSample.BiStreamingService.ReportResponseStatus Status;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.ultipro.com/dataservices/bistream/2")]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string StatusMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.ultipro.com/dataservices/bistream/2", Order=0)]
        public System.IO.Stream ReportStream;
        
        public StreamReportResponse()
        {
        }
        
        public StreamReportResponse(BiDataServicesParametersSample.BiStreamingService.ReportResponseStatus Status, string StatusMessage, System.IO.Stream ReportStream)
        {
            this.Status = Status;
            this.StatusMessage = StatusMessage;
            this.ReportStream = ReportStream;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface IBIStreamServiceChannel : BiDataServicesParametersSample.BiStreamingService.IBIStreamService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class BIStreamServiceClient : System.ServiceModel.ClientBase<BiDataServicesParametersSample.BiStreamingService.IBIStreamService>, BiDataServicesParametersSample.BiStreamingService.IBIStreamService
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public BIStreamServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(BIStreamServiceClient.GetBindingForEndpoint(endpointConfiguration), BIStreamServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public BIStreamServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(BIStreamServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public BIStreamServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(BIStreamServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public BIStreamServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<BiDataServicesParametersSample.BiStreamingService.StreamReportResponse> BiDataServicesParametersSample.BiStreamingService.IBIStreamService.RetrieveReportAsync(BiDataServicesParametersSample.BiStreamingService.RetrieveReportRequest request)
        {
            return base.Channel.RetrieveReportAsync(request);
        }
        
        public System.Threading.Tasks.Task<BiDataServicesParametersSample.BiStreamingService.StreamReportResponse> RetrieveReportAsync(string ReportKey)
        {
            BiDataServicesParametersSample.BiStreamingService.RetrieveReportRequest inValue = new BiDataServicesParametersSample.BiStreamingService.RetrieveReportRequest();
            inValue.ReportKey = ReportKey;
            return ((BiDataServicesParametersSample.BiStreamingService.IBIStreamService)(this)).RetrieveReportAsync(inValue);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.WSHttpBinding_IBIStreamService))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpsTransportBindingElement httpsBindingElement = new System.ServiceModel.Channels.HttpsTransportBindingElement();
                httpsBindingElement.AllowCookies = true;
                httpsBindingElement.MaxBufferSize = int.MaxValue;
                httpsBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpsBindingElement);
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IBIStreamService))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.WSHttpBinding_IBIStreamService))
            {
                return new System.ServiceModel.EndpointAddress("https://service3.ultipro.ca/services/BIStreamingService");
            }
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IBIStreamService))
            {
                return new System.ServiceModel.EndpointAddress("https://service3.ultipro.ca/services/BIStreamingService");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            WSHttpBinding_IBIStreamService,
            
            BasicHttpBinding_IBIStreamService,
        }
    }
}
